{"version":3,"sources":["panels/Home.js","img/Moscow.jpg","panels/Persik.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","header","mode","before","photo_200","src","first_name","last_name","city","title","stretched","size","onClick","bridge","send","ad_format","then","data","console","log","result","catch","error","Persik","props","left","className","persik","alt","Date","toLocaleTimeString","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","user","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","setInterval","ReactDOM","render","getElementById"],"mappings":"oPAmFeA,EA1EF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACZ,eAAC,IAAD,CAAOF,GAAIA,EAAX,UACC,cAAC,IAAD,uCACCE,GACD,cAAC,IAAD,CAAOC,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,mFAAf,SACC,cAAC,IAAD,CACCC,OAAQH,EAAYI,UAAY,cAAC,IAAD,CAAQC,IAAKL,EAAYI,YAAe,KADzE,mBAIKJ,EAAYM,WAJjB,YAI+BN,EAAYO,eAK1CP,GACD,cAAC,IAAD,CAAOC,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,4CAAf,SACA,cAAC,IAAD,oBAGIF,EAAYQ,KAAKC,WAIpBT,GACD,cAAC,IAAD,CAAOC,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,mBAAf,SACC,cAAC,IAAD,oBAEIF,EAAYF,QAQjB,eAAC,IAAD,WAEA,cAAC,IAAD,CAAQY,WAAS,EAACC,KAAK,IAAIT,KAAK,YAAYU,QAASb,EAAI,UAAQ,SAAjE,iFAMA,cAAC,IAAD,CAAQY,KAAK,IAAIT,KAAK,YAAWU,QAAS,WAAKC,OAAOC,KAAK,wBAAyB,CAACC,UAAU,cACxFC,MAAK,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,EAAKG,WAC/BC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,OAFjC,+CCpDY,MAA0B,mC,OCQzCT,IAAOC,KAAK,qCAAsC,CAAC,KAAQ,YAM3D,IAoCeS,EApCA,SAAAC,GAAK,OACnB,eAAC,IAAD,CAAO1B,GAAI0B,EAAM1B,GAAjB,UACC,cAAC,IAAD,CACC2B,KAAM,cAAC,IAAD,CAAiBb,QAASY,EAAMzB,GAAI,UAAQ,SADnD,oEAKA,qBAAK2B,UAAU,SAASrB,IAAKsB,EAAQC,IAAI,mBASxC,sBAAKF,UAAU,OAAf,UACC,4GACA,sCAAQ,IAAIG,MAAOC,qBAAnB,gBCoBWC,EA5CH,WACX,MAAsCC,mBAAS,QAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA+BF,mBAAS,MAAxC,mBAAOhC,EAAP,KAAoBmC,EAApB,KACA,EAA4BH,mBAAS,MAArC,mBAAOI,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoB1B,IAAOC,KAAK,uBADhC,OACO0B,EADP,OAECL,EAAQK,GACRH,EAAU,MAHX,4CARe,sBACfxB,IAAO4B,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAM1B,EAAY,EAAZA,KACnC,GAAa,yBAAT0B,EAAiC,CACpC,IAAMC,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQ9B,EAAK+B,OAAS/B,EAAK+B,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAUH,IAAMrD,EAAK,SAAAsD,GACVnB,EAAemB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,eAAC,IAAD,CAAMvB,YAAaA,EAAaG,OAAQA,EAAxC,UACC,cAAC,EAAD,CAAMtC,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,cAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,Y,OCnC7Bc,IAAOC,KAAK,gBAWZ2C,aATA,WAGEC,IAASC,OAAO,cAAC,EAAD,IAASd,SAASe,eAAe,WAMjC,KAKlB/C,IAAOC,KAAK,gCAAiC,CAAC,SAAY,UAAW,IAAO,+C","file":"static/js/main.a03a1886.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\n\n\n\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Ваши</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">Фамилия и Имя </Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\n\t\t {fetchedUser &&\n\t\t <Group header={<Header mode=\"secondary\">Город</Header>}>\n\t\t\t<Cell\n\t\t\t>\n\n\t\t\t{`${fetchedUser.city.title}`}\n\t\t\t</Cell>\n\t  \t</Group>}\n\n\t\t\t{fetchedUser &&\n\t\t\t<Group header={<Header mode=\"secondary\">VK_ID</Header>}>\n\t\t\t\t<Cell\n\t\t\t\t>\n\t\t\t\t{`${fetchedUser.id}`}\n\t\t\t\t</Cell>\n\t\t\t\t</Group>}\n\n\n\n\n\t\t\n\t\t\t<Div>\n\t\t\t\t\n\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n\t\t\t\tУзнать время\n\t\t\t\t</Button>\n\n\n\t\t\t\t\n\t\t\t<Button size=\"l\" mode=\"secondary\"onClick={()=>{bridge.send(\"VKWebAppShowNativeAds\", {ad_format:\"preloader\"}) \n         .then(data => console.log(data.result)) \n        .catch(error => console.log(error));}}>\n          Show me the Persik, please\n        </Button>\n\n\n\n\n\n\n\n\n\t\t\t</Div>\n\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n\n\n\n","export default __webpack_public_path__ + \"static/media/Moscow.81daead8.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport bridge from \"@vkontakte/vk-bridge\";\n\n\n//import { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\nimport { Panel, PanelHeader, Button, PanelHeaderBack, Header, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\nbridge.send(\"VKWebAppTapticNotificationOccurred\", {\"type\": \"success\"});\n\n\nimport persik from '../img/Moscow.jpg';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tВернуться\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\n\n\n\n\n\n\n\n\t\t\t<div className=\"text\">\n\t\t\t\t<h1>Местное время:</h1>\n\t\t\t\t<h2>-- {new Date().toLocaleTimeString()} --</h2>\n\t\t\t</div>\n\n\n\t\t\n\n\n\n\t</Panel>\n);\n\n\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(null);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\n\n\n\n\n\n\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\nimport axios from 'axios';\n\n\n\n\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nfunction tick() {\n\n  // highlight-next-line\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n  if (process.env.NODE_ENV === \"development\") {\n    import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n  }\n}\n\nsetInterval(tick, 1000);\n\n//bridge.send(\"VKWebAppJoinGroup\", {\"group_id\": 198236346});\n//bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 198236346, \"key\": \"cc964fabb0e1d70924a92e4e8b513dbff7cc10a9\"});\n\nbridge.send(\"VKWebAppDenyMessagesFromGroup\", {\"group_id\": 198236346, \"key\": \"cc964fabb0e1d70924a92e4e8b513dbff7cc10a9\"});\n\n//bridge.send(\"VKWebAppLeaveGroup\", {\"group_id\": 198236346});\n\n  // highlight-next-line\n"],"sourceRoot":""}